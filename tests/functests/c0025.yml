doc_meta: |
  folder: dvars
  title: string literal
  head: |
    Showcase a dvar's value could reference to a object's sub element

  sections:
    - title: Yml string is essentially the object
      content: |
        This demo shows that a dvar stores a dynamic value, which is in yml format

        The yml string could be converted to a object and registered in execution runtime. We will detail this later

    - title: Demo
      log: yes


notes:
  goal:
    - to show complex object using dynamic var

  design:
    - to make it simple, the dvar value is always a string
    - |
      the string could be a formated yaml, so that you can
      convert it to yaml then a object
    - register the object into that scope's vars list
    - consider a modified name of -> a_smart_guy_obj to reference to

vars:
  student:
    name: Tom
    gender: Male
    school: Sydney Grammar

dvars:
  - name: a_smart_guy
    value: |
      name: "{{.student.name}}"
      sex: "{{.student.gender}}"
      school: "{{.student.school}}"

tasks:

  - name: task
    task:
      -
        func: shell
        do:
          - echo """a smart guy=>{{.a_smart_guy}}"""
