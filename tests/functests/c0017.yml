doc_meta: |
  folder: call-func
  title: assemble worlflow
  head: |
    You can use call func to assemble a sequential workflow

    This demo shows that you can adjust the seqence of the callee tasks

    The result of concret implementation of callee_task1/2 will be different depending on the input vars from the caller

  sections:
    - title: Note
      content: |
        Please take a look of the log to see what are the contextual vars in runtime are

    - title: Demo
      log: yes

notes:
  goal:
    - to test multiple call func task executions should pass

vars:
  a: runtime-a
  e: runtime-e
  k: runtime-k

tasks:

  -
    name: callee_task1
    task:
      -
        func: shell
        vars:
          a: callee-a
          b: callee-b
          c: callee-c
        do:
          - echo "exec ref-task1"
          - |
            echo """
            vars:
            a: {{.a}}
            b: {{.b}}
            c: {{.c}}
            e: {{.e}}
            k: {{.k}}
            """

  -
    name: task
    desc:
    task:
      -
        func: call
        desc: call1
        vars:
          a: caller-ref-1a
          b: caller-ref-1b
        do:
          - callee_task1
          - callee_task2

      -
        func: call
        desc: call2
        vars:
          a: caller-ref-2a
          b: caller-ref-2b
        do:
          - callee_task2
          - callee_task1

  -
    name: callee_task2
    task:
      -
        func: shell
        vars:
          a: callee-a
          b: callee-b
          c: callee-c
        do:
          - echo "exec ref-task2"
          - |
            echo """
            vars:
            a: {{.a}}
            b: {{.b}}
            c: {{.c}}
            e: {{.e}}
            k: {{.k}}
            """
