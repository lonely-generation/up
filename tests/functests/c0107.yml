doc_meta: |
  folder: test-debug
  title: ues trace
  head: |
    For a complicated workflow, if you need to trace and pin point a step, you can use trace cmd. This introduces trace to set a colorful trace marker to easily locate problem in verbose log

    Please note that the display of trace is colored in terminal output

  sections:
    - title: Demo
      log: yes

notes:
  goal:
    - to fix a bug in callee task which var has been updated but not reflected
    - introduce trace to set a colorful trace marker to easily locate problem in verbose log
    - demo that the vars in callee task has its own stack

vars:
  tom: this is tom in global
  jerry: this is jerry in global

tasks:
  -
    name: task
    task:
      -
        func: call
        do: sub

      -
        func: cmd
        desc: check value of tom
        do:
          - name: print
            cmd: 'in main task print3: {{.tom}}'

  -
    name: sub
    task:
      -
        func: cmd
        desc: check value of tom 1
        vars:
          john: john in sub func1
        do:
          - name: reg
            cmd:
              name: tom
              desc: by default tom is registered in to global context
              value: 'tom created in sub'

          - name: print
            cmd: 'in sub print1: {{.tom}}'

      -
        func: cmd
        do:
          - name: trace
            cmd: debug tom's value==>

      -
        func: cmd
        desc: check value of tom 2
        vars:
          john: john in sub func2
        do:
          - name: print
            cmd: 'in sub print2: {{.tom}}'

      -
        func: cmd
        do:
          - name: trace
            cmd: <==debug tom's value
