doc_meta: |
  folder: cmd-func
  title: toObj
  head: |
    toObj is a cmd to convert yml string to a a registered variable. By default it will register the var to global runtime scope, you can use flag localOnly to indicate that this var will be only registered to local scope

  sections:
    - title: Difference from toObj in dvar
      content: |
        toObj in dvar is limited and can not inherit the loopitem unless you register the loopitem to another var

    - title: Relavant
      content: toObj in dvar
      refs:
        - title: toObj in dvar
          link: ../../object-oriented/c0074

    - title: Demo
      log: yes

notes:
  goal:
    - add a cmd to convert yml to object
    - |
      toObj in dvar is limited and can not inherit
      the loopitem unless you register the loopitem to another var
    - it does not need load to implment load from file, use readFile instead

tasks:

  - name: task
    task:

      - func: cmd
        vars:
          person_yml: |
            person:
              name: tom
              age: 23
          name_to_convert: person_yml
          name_to_reg: person_dyna_object
          person: jason

        do:
          - name: toObj
            desc: |
              the key is pointing to a var name and use its content as yml content
            cmd:
              fromkey: person_yml
              reg: person_object

          - name: printObj
            cmd: person_object

          - name: print
            cmd: 'my name is: {{.person_object.person.name}}'

          - name: toObj
            cmd:
              fromkey: '{{.name_to_convert}}'
              reg: '{{.name_to_reg}}'

          - name: printObj
            cmd: '{{.name_to_reg}}'

          - name: toObj
            desc:
              use src content directly
            cmd:
              src: |
                person:
                  name: {{.person}}
                  age: 53
              reg: '{{.name_to_reg}}'

          - name: printObj
            cmd: '{{.name_to_reg}}'

