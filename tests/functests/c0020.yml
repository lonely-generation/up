doc_meta: |
  folder: call-func
  title: call func as interface
  head: |
    This demos a design pattern using call and callee task without local vars

    The caller's varss should always take priority than the the callee's vars, if callee has already got same local vars defined, they will be overrided and used as default values

  sections:
    - title: Applications
      content: |
        The possible application of this pattern is to  call different implmentation task depending on certain condition, For example,

        1. you could conditionally deploy an application to AWS, Azure or K8s depending on criteria

        2. you could provistion backend storage solution using EBS, EFS

    - title: Demo
      log: yes

notes:
  goal:
    - to show a design pattern using call and callee task without local vars
    - the caller's varss should always take priority than the the callee's vars, if callee has already got same local vars defined, they will be overrided and used as default values

vars:
  school: sydney grammar

tasks:
  -
    name: task
    task:
      -
        func: call
        desc: call function with different vars
        vars:
          studentname: Tom
          school: sydney grammar
          gender: male
        do:
          - function

  - name: function
    desc: |
      as a design pattern, this is a function task
      it's better to not to use any local vars, in this
      way, the vars are passed in from caller call so
      that this function could be used by multiple ref tasks
    task:
      -
        func: shell
        desc: show school and student info
        do:
          - echo "studentname -> {{.studentname}} | gender -> {{.gender}}"
          - echo "school -> {{.school}}"

