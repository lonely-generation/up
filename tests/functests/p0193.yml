doc_meta: |
  folder: security
  title: use env var to encrypt and decrypt

scopes:
  - name: nonprod
    members: [dev, staging]
    dvars:
      - name: ENC_KEY_NP
        value: this_str_is_my_nonprod_enc_key
        flags:
          - envVar
      - name: enc_key
        value: '{{ env "ENC_KEY_NP" |validateMandatoryFailIfNone "enc_key"}}'

  - name: prod
    members: [prod]
    dvars:
      - name: ENC_KEY_PROD
        value: this_str_is_my_prod_enc_key
        flags:
          - envVar
      - name: enc_key
        value: '{{ env "ENC_KEY_PROD" |validateMandatoryFailIfNone "enc_key"}}'

tasks:
  -
    name: task
    task:
      - func: call
        dvars:
          - name: choice
            desc: choose 1 to encrypt or anyting else to decrypt
            flags: [prompt]
        do: encrypt
        if: '{{eq .choice "1"}}'
        else:
          - func: call
            do: decrypt

  -
    name: encrypt
    task:
      -
        func: cmd
        dvars:
          - name: raw
            flags:
              - prompt
          - name: encrypted
            value: '{{ .raw | encryptAES .enc_key}}'
          - name: decrypted
            value: '{{ .encrypted | decryptAES .enc_key}}'
        do:
          - name: print
            cmd: '{{ .raw }}'
          - name: print
            cmd: '{{ .encrypted }}'
          - name: print
            cmd: '{{ .decrypted }}'

  -
    name: decrypt
    task:
      -
        func: cmd
        dvars:
          - name: encrypted
            desc: please input the encrypted value
            flags:
              - prompt
          - name: decrypted
            value: '{{ .encrypted | decryptAES .enc_key}}'
        do:
          - name: print
            cmd: '{{ .encrypted }}'
          - name: print
            cmd: '{{ .decrypted }}'
