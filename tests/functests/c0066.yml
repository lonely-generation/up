doc_meta: |
  folder: cmd-func
  title: reg and deReg
  head: |
    reg and deReg cmd is used to register a variable or remove a variable

  sections:
    - title: reg cmd spec
      content: |
        reg will automatically register it to global runtime vars map
        ```
         -  name: reg
            desc: description
            cmd:
              name: this is varname it will register to
              value: this is the value, or dvar to be assigned to the varname
            flags:
              - localOnly

        ```

    - title: deReg cmd spec
      content: |
        reg will automatically register it to global runtime vars map
        ```
          -
            name: deReg
            desc: demo of deReg command
            cmd: this_will_be_the_var_name_to_be_removed
        ```

    - title: localOnly flag
      content: |
        Indicating if this var only availbe in the local scope within one func call by default, it register the var to global scope

    - title: note
      content: |
        Compare to the template pipeline reg/deReg command, the difference of these two command here reg and deReg the vars immediately in the current func step, rather than the next func step. Check it out the demo step

    - title: Demo
      log: yes

vars:
  student:
    name: Tom
    gender: Male
    school: Sydney Grammar

tasks:

  -
    name: task
    task:
      - func: shell
        do:
          - echo "hello 1"


      - func: cmd
        dvars:
          - name: school
            value: "{{.student.school}}"
        do:
          -
            name: print
            desc: demo of print command
            cmd: "hello, {{.student.school}}"

          -
            name: reg
            desc: demo of reg command
            cmd:
              name: greet
              value: "from local dvars, {{.school}}. registered to global runtime"

          -
            name: print
            desc: |
              show above reg var greet and it is available immediately in current func
              unlike the reg in template, it is available in the next step func execution
            cmd: "hello, {{.greet}}"

          -
            name: reg
            desc: |
              demo greetlocal is registered to local var only
              it is accessible in current func, but not next one
            cmd:
              name: greetlocal
              value: "hello, {{.student.school}}. registered to local func only"
            flags:
              - localOnly

          -
            name: print
            desc: |
              this show display a correct rendered value
            cmd: "hello, {{.greetlocal}}"


      - func: cmd
        desc: the greetlocal will not be availe in this func call
        do:
          -
            name: print
            desc: |
              this will show the registered global runtime var
            cmd: "hello, {{.greetlocal}}"

          -
            name: print
            desc: |
              this will show <no value> for greetlocal, as it is not registered to global
            cmd: "hello, {{.greet}}"

      - func: cmd
        do:
          -
            name: deReg
            desc: demo of deReg command
            cmd: greet

      - func: shell
        desc: |
          you will see that greet var is removed from global var map
          you will see <no value> here
        do:
          - echo "hello {{.greet}}"