doc_meta: |
  folder: quick-start
  title: manage dependencies
  head: |
    Use call func to chain dependencies

    We are used to the way the dependencies are managed in build tasks, such as in Makefile, we list the pre tasks to be executed prior to the named task

    In UP, we simply use call instead

    It is designed this way for composibility and flexibility so that task and steps are consumable and reusable.

  sections:
    - title: Demo
      log: yes

notes:
  goal:
    - to ues call to achieve the goal of task composition
  why:
    - it is like dep but allow pre and post task using call

tasks:
  -
    name: pre_task
    desc: this is pre-task
    task:
      -
        func: shell
        do:
          - echo "hello"

  -
    name: post_task
    desc: this is post-task
    task:
      -
        func: shell
        desc: do step1 in shell func
        do:
          - echo "world"

  -
    name: 2ndtask
    task:
      -
        func: shell
        desc: to test multiple refs
        do:
          - echo "this is 2nd task"

  -
    name: task
    desc: this is the task and expect the final message (hello I love this world)
    task:
      -
        func: call
        do: pre_task
      -
        func: shell
        do:
          - echo " I love this "
      -
        func: call
        do:
          - post_task
          - 2ndtask
