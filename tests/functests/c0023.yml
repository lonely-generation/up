doc_meta: |
  folder: dvars
  title: dvars intro
  head: |
    dvar stands for dynamic var. As suggested by the naming, dvar is like a calculated variable during runtime, we call this behavior as expansion. A dvar's value is expressed using golang template, it could be the case that a expanded result contains another template variable, so that you will need to expand it again.

    By default the expand level is 1, but you can custmise it to be multiple depending on your own needs

    We use array to configure a entry of dvar item, the sequence matters as the value of dvar will be evaluated sequentially, the later one will need to reference to the evaluated value of another dvar

    A validation rule is that the name of a dvar should should not contiain "-" as it will conflict with golang template var naming

  sections:
    - title: Note
      content: |
        Please take note the demo cases that use multiple expansion, it is dynamic on dynamic and it is usful in certain cases. Please read the self explanation of the description in dvar config

    - title: Demo
      log: yes

notes:
  goal:
    - to show dynamic vars
    - dynamic vars suppport customizable level of expanding
    - default expand level is 1
    - use array so that sequence is known and reduce complexity and mess
    - |
      dvar name should not contiain - as it will conflict
      with golang template var naming

vars:
  student: Tom
  gender: Male
  school: Sydney Grammar
  a1: a1->{{.b2}}
  b2: b2->{{.c3}}
  c3: c3->{{.d4}}
  d4: d4->{{.student}}

dvars:
  - name: from
    value: "{{.school}}"
    desc: |
      default expanding level is 1
      you will have to quote it if it starts the value of bracket since yaml uses it

  - name: sex
    value: "{{.gender}}"
    expand: 1

  - name: dependon_vars
    value: "{{.sex}}"

  - name: dependon_var_and_dvar
    value: "{{.student}}-{{.sex}}"
    desc: this is still 1 level expanding as .sex must be rendered and merged into runtimevars

  - name: multple_render_var_level3
    value: multple-render-var-> {{.b2}}
    desc: |
      you don't have to quote as bracket is not the start of the value and not conflict with yaml

  - name: multple_render_var_level3_with_expand2
    value: multple-render-var-> {{.b2}}
    expand: 2

  - name: multple_render_var_level3_with_expand3
    value: multple-render-var-> {{.b2}}
    expand: 3

  - name: multple_render_var_level3_with_expand4
    value: multple-render-var-> {{.b2}}
    expand: 4

  - name: multple_render_var_level5
    value: multple-render-var-> {{.a1}}
    expand: 5

#  - name: invalid-name
#    value: multple-render-var-> {{.a1}}

tasks:

  - name: task
    task:
      -
        func: shell
        do:
          - echo "student=>{{.student}}"
          - echo "a1=> a1->{{.b2}}"
          - echo "from->{{.from}}"
          - echo "sex->{{.sex}}"
          - echo "dependon_vars->{{.dependon_vars}}"
          - echo "dependon_var_and_dvar->{{.dependon_var_and_dvar}}"
          - echo "multple_render_var_level3->{{.multple_render_var_level3}}"
          - echo "multple_render_var_level4->{{.multple_render_var_level4}}"
