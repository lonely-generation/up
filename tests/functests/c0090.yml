doc_meta: |
  folder: loop
  title: loopitem in dvar
  head: |
    This showcases that the loopitem, loopindex should be available in the dvar as reference. This will be useful when you use a call func to loop through a list of items

  sections:
    - title: Demo
      log: yes

    - title: Note
      content: |
        As self explained in the wrong_usage desc, you can't access loopitem in current stack. There are two ways you will have to access loopitem in dvar processing:
        1. shown as correct_usage, use call to delegate loop process to a callee task
        2. use block func, so the dvar in any func in actually in the callee stack

notes:
  goal:
    - make loop item and index parsablele in dvar
    - loopitem and index will never be availab in dvar expansion phase as designed

tasks:
  -
    name: task
    task:

      - func: cmd
        name: wrong_usage
        desc: |
          note that you can't access loopitem in dvar processing in curent func
          you can only access loopitem in dvar processing when it is called as callee, as corret_usage shows
          however you can access loopitem in do action
        dvars:
          - name: person
            value: '{{.loopitem}}'
            flags:
              - v
        loop:
          - tom
          - peter
          - james
        do:
          - name: print
            cmd: |
              loopitme could be accessed here: {{.loopitem}}

      - func: call
        name: corret_usage
        vars:
          taskvar: taskvar
        do:
          - task_callee2
        loop:
          - tom
          - peter
          - james

  -
    name: task_callee1
    task:
      - func: cmd
        do:
          -
            name: print
            cmd: 'hello {{.loopitem}}'
  -
    name: task_callee2
    task:
      - func: cmd
        dvars:
          - name: person
            desc: |
              loopitem is not availab yet when dvar is expanded
              due to the design that caller's var will override
              the callee's var, the loopitem should not be availabe
              in dvar and this is not a bug
            value: '{{.loopitem}}'
            flags: [vvvv]
          - name: greet
            value: 'hello'
            flags: [vvvv]
        do:
          -
            name: print
            desc: as explained, this should be <no value>
            cmd: 'callee2: {{.person}}'
          -
            name: print
            desc: |
              this will be the loopitem from parent caller's
              var space and this is design
            cmd: 'callee2: {{.loopitem}}'
          -
            name: print
            cmd: 'callee2: {{.greet}}'
          -
            name: print
            cmd: 'taskvar: {{.taskvar}}'
