doc_meta: |
  folder: security
  title: mask senstive input
  head: |
    When you use prompt to accept user input, the terminal will log the senstive information, such as password. There is chance this will go to the logs and be exposed to cause security issue.

    Requirement from issue: https://github.com/upcmd/up/issues/20

  sections:
    - title: Demo
      log: yes

tasks:
  -
    name: task
    task:
      - func: shell
        desc: input raw value
        dvars:
          - name: username
            flags: [prompt,]
        do:
          - echo "hello {{.username}}"

      - func: shell
        desc: |
          input secret, eg a password
          this will be masked
          however password is still leaked during the debugging or in higher verbose level
        dvars:
          - name: password
            flags: [prompt, masked]
        do:
          - echo "password is - {{.password}}"

      - func: shell
        desc: |
          password will be saved and kept into vault intead
        dvars:
          - name: protectedPassword
            flags:
              - prompt
              - masked
              - secret
        do:
          - echo "this print out nothing as protectedPassword is stored in the vault as secret"
          - echo "protectedPassword is - {{.protectedPassword}}"
          - echo "this print out the retrieved secret from vault"
          - echo "protectedPassword is - {{ "protectedPassword" | fromVault}}"
